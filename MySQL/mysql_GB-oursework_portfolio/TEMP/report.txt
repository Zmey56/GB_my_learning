Торговля криптовалютами, покупка акций и тому подобное в наши дни чрезвычайно популярны – это воспринимается как легкая прибыль. В настоящее время цены растут, но мы не можем знать, когда это изменится. С другой стороны, мы знаем, что в какой-то момент это произойдет. Но мы здесь не для того, чтобы делать финансовые прогнозы. Вместо этого мы поговорим о модели данных, которую можно использовать для поддержки торговли криптовалютами и финансовыми инструментами, такими как акции или акции фондов.

Что Вам нужно знать О Торговле Валютами и Акциями

Технологические усовершенствования за последние несколько десятилетий оказали значительное влияние на торговлю. В настоящее время существует множество онлайн-торговых платформ, которые вы можете использовать. Большая часть сегодняшней торговли осуществляется виртуально – вы можете увидеть бумажные акции в музеях, но вряд ли вы увидите акции, которые вы покупаете в бумажной форме. И вам не нужно паковать чемоданы и отправляться на Уолл-стрит или любую другую фондовую биржу, чтобы совершить сделку. Не выходя из своего компьютера или мобильного устройства, вы можете покупать или продавать производные финансовые инструменты (такие как облигации, акции или товары).

Большинство сделок (продажа производных финансовых инструментов) следуют тем же правилам. Есть продавцы и покупатели. Если они договорятся о цене, сделка состоится. После сделки цена этого производного финансового инструмента будет пересчитана, и процесс продолжится с новыми трейдерами. Акции и другие производные финансовые инструменты работают точно так же.

Что такое криптовалюта? Вы, наверное, слышали о биткойне и других криптовалютах. Но что это такое? Криптовалюты похожи на виртуальные валюты, но они не привязаны к валютам реального мира (таким как евро или доллары). Вместо этого пользователи могут торговать криптовалютами между собой, как токенами. Затем они могут договориться о продаже, которая превратит их токены в реальные деньги. Эти продажи функционируют точно так же, как описанные выше сделки с акциями и акциями.

Эта тема сложна, и в нашей модели может быть много деталей (например, записи документов и транзакций). Я собираюсь сделать это просто; я не буду реализовывать какую-либо автоматическую торговлю или какие-либо формулы для создания новых цен после торгового события.

Итак, давайте взглянем на эту простую торговую модель.

Модель Данных

Модель данных состоит из трех предметных областей:
Currencies
Items
Traders

Мы представим каждую предметную область в том порядке, в котором она указана.

CURRENCIES

Валютная область очень проста. Он содержит четыре таблицы, в которых хранятся все используемые нами валюты и их обменные курсы. Валюты важны, потому что:

Для торговли мы будем использовать одну валюту, называемую базовой валютой. Онлайн-платформа для торговли акциями, скорее всего, будет использовать доллар США (USD) в качестве базовой валюты, независимо от фактических регионов трейдеров. Все транзакции будут конвертированы в базовую валюту.
Мы также можем использовать неосновные или местные валюты для всех стран, где доступна наша торговая платформа. Это позволило бы нам отображать цены в местной валюте, но при этом совершать сделки в базовой валюте.

Остальные две таблицы относятся к валютам и странам.


Наиболее важной таблицей в этой предметной области является таблица валют. Здесь мы будем хранить все валюты, которые мы когда-либо использовали для торговли, включая криптовалюты. Будет ли валюта включена в эту таблицу, зависит от того, будет ли эта валюта использоваться для оплаты продаваемых товаров. Для каждой валюты мы будем хранить:
code - код, используемый для UNIQUELY обозначения этой валюты. Для национальных валют это будет код ISO 4217 (например, доллар США за доллар США) или какой-либо другой официальный код. Мы также могли бы использовать ISO 4217 для криптовалют; XBT-это ISO-код Биткоина. Однако Биткойн также использует код BTC неофициально.
name - UNIQUELY название этой валюты (например, доллар США).
is_active – Если валюта в данный момент активна в нашей системе.
is_base - Если эта валюта является базовой валютой нашей системы. Обычно у нас будет только одна базовая валюта за раз. Возможно, у нас может быть более одного, например, использование евро для государств ЕС и долларов США для других областей. В этом случае у нас есть возможность назначить базовую валюту каждой стране с этим атрибутом.

В следующей таблице хранятся текущие и исторические курсы между валютными парами. В таблице currency_rate мы сохраним currency_id, который мы хотим сравнить с base_currency_id, а также rate, с которой была сохранена эта пара (ts). Поскольку мы будем хранить ставки в том виде, в каком они были в разные моменты времени, в этой таблице будут храниться как исторические, так и текущие данные.

Список всех соответствующих стран хранится в словаре country. Помимо первичного ключа (id), он содержит один атрибут, содержащий UNIQUE название name.

Последней таблицей в этой предметной области является таблица currency_used. В большинстве случаев страна всегда будет использовать одну и ту же валюту. Тем не менее, изменения могут произойти, например, когда многие страны ЕС заменили свои национальные валюты евро. Чтобы учесть такую возможность, мы будем хранить историю всех валют, которые мы использовали. Для каждой записи в этой таблице мы будем хранить ссылки на таблицу стран (country_id), таблицу валют (currency_id) и время использования этой валюты (date_from и date_to). Если значение date_to равно НУЛЮ, то в настоящее время используется эта валюта. Конечно, в каждой стране должна использоваться только одна валюта. Мы не будем реализовывать эту проверку в модели; вместо этого мы будем выполнять проверку при добавлении или обновлении записи в этой таблице.

ITEMS

Таблицы в Items области Товары определяют все товары, доступные для торговли, и их текущий статус. Он также записывает все изменения, произошедшие с этими элементами с течением времени.

В таблице Items перечислены все товары, которые трейдеры могут купить или продать (или которые они купили или продали). Это могут быть акции, фонды или криптовалюты. Любая сделка, связанная с этими финансовыми инструментами, использует почти точно такой же процесс, поэтому мы можем использовать одну и ту же структуру для всех них. Для каждого товара мы будем хранить:
code – UNIQUE текстовый код для этого элемента, аналогичный тому, который мы используем для акций (например, NASDAQ использует код “AAPL” для Apple Inc)..
name – Полное название компании (для акций), фонда или криптовалюты..
is_active – Доступен ли этот товар для торговли или нет.
currency_id – Ссылается на валюту, используемую в качестве базовой валюты для данного товара.
details – Все дополнительные сведения (например, количество выпущенных акций) в текстовом формате.

Таблица price отслеживает все изменения цен во времени. Как только произойдет изменение, мы сохраним время (ts), а также цену покупки и продажи соответствующего товара (item_id). Мы также сохраним ссылку на таблицу currency, в которой указывается валюта, используемая для установки значения этого элемента в то время. Обратите внимание, что предпочтительная валюта для любого товара может измениться.

Заключительной таблицей в этой предметной области является таблица report. Идея состоит в том, чтобы хранить регулярные (т. е. ежедневные) отчеты по каждому элементу. Этот отчет будет основан на торговле в течение этого периода, и в нем будут храниться финансовые данные в одном месте. Это избыточные данные, но они могут оказаться очень полезными при запросе исторических цен (что часто случается, поскольку трейдеры чрезвычайно заинтересованы в тенденциях). Для каждой записи в этой таблице мы сохраним:
trading_date – Дата этого отчета. Если нам нужно составлять отчеты чаще, чем один раз в день, нам придется вносить изменения в модель – например, добавлять временные метки, указывающие, когда начался и закончился торговый период.

trading_date – Дата этого отчета. Если нам нужно составлять отчеты чаще, чем один раз в день, нам придется вносить изменения в модель – например, добавлять временные метки, указывающие, когда начался и закончился торговый период.
item_id и currency_id – ссылки на соответствующий item и currency.
first_price, last_price, min_price, max_price and avg_price – Первая, последняя, максимальная, минимальная и средняя цена на данный товар в течение этого периода.
total_amount – Общая сумма, уплаченная за этот товар в течение отчетного периода..
quantity – Количество товаров, проданных в течение данного отчетного периода. Пожалуйста, обратите внимание, что средняя цена может быть рассчитана исходя из total_amount и quantity, но я предпочитаю разделять “total_amount". Это упрощает ситуацию, когда мы создаем отчет за более длительный период времени, например еженедельно. В этом случае мы могли бы добавить все атрибуты total_amount и разделить их на сумму всех атрибутов quantity, чтобы получить среднюю цену за неделю.

Все атрибуты в этой таблице (кроме первичного ключа и внешних ключей) могут иметь значение NULL. Это будет иметь место, когда мы вставим запись за новый торговый период – до сих пор сделок не было. В начале каждой даты мы можем ожидать, что будем вставлять по одной записи для каждого элемента и обновлять эти значения по ходу дня. Окончательное обновленное значение также будет итоговым отчетом за этот день.

TRADERS

Предметная область Traders-последняя, которую мы обсудим, но это самая важная область в модели. В его четырех таблицах (исключая таблицы country и item, которые мы уже рассмотрели) хранится информация о трейдерах, их запасах и их действиях. Обратите внимание, что используемая здесь таблица currency является всего лишь копией. Он используется для упрощения модели и предотвращения дублирования отношений.

Центральная таблица-это таблица trader. Для каждого трейдера мы будем хранить:

first_name и last_name – Имя и фамилия трейдера.
user_name и password – Имя пользователя и пароль (хэш), выбранные трейдером. Атрибут user_name может хранить только UNIQUE значения.
email – Адрес электронной почты трейдера. Это будет использовано для завершения процесса регистрации и для всех последующих контактов с трейдером. Он также может содержать только UNIQUE значения.
confirmation_code – Код, отправленный пользователю для завершения процесса регистрации..
time_registered и time_confirmed – Отметки времени, когда трейдер зарегистрировался и когда он завершил процесс регистрации..
country_id – country, в которой живет трейдер.
preferred_currency_id – currency, которую валюту трейдер предпочитает.

Список всех товаров, которыми в настоящее время владеет трейдер, хранится в таблице current_inventory. Для каждой UNIQUE пары trader_id – item_id мы будем хранить quantity, которым в настоящее время владеет трейдер.

Остальные две таблицы напрямую связаны с предложениями и сделками. Мы предположим, что каждый трейдер может разместить предложение о покупке или продаже товаров по определенной цене. Когда появится соответствующее предложение, произойдет событие торговли. (Мы не будем вдаваться в подробности, характерные для фондовых бирж, где посредником выступает брокер.)

Мы будем вести учет всех предложений в таблице предложений. Любой трейдер может разместить предложение о покупке или продаже товаров. Чтобы это произошло, нам нужно сохранить следующие данные:
trader_id и item_id – Ссылки на трейдера, разместившего это предложение, и на товар, который они хотят купить или продать.
quantity – количество, которое они хотят купить или продать.
buy и sell – Если это предложение предназначено для покупки или продажи. Одновременно можно задать только один атрибут.
price – Желаемая цена покупки или продажи. Это не обязательно, потому что трейдер может захотеть купить или продать, независимо от цены.
ts – Метка времени, когда была вставлена эта запись.
is_active – Действует ли еще это предложение. Он может стать неактивным, а) если трейдер установит его в неактивное состояние, или б) если сделка состоялась.


Итоговая таблица в нашей модели содержит данные, относящиеся к торговому событию. Торговля происходит между двумя пользователями после того, как они оба разместят предложение. Используемая цена может быть первой предложенной ценой или текущей ценой, в зависимости от того, что мы хотим реализовать в нашем приложении. Для каждого торгового события мы будем хранить:
item_id – Относится к продаваемому товару.
seller_id и buyer_id – Оба ссылаются на таблицу трейдеров и обозначают пользователей, участвующих в торговле.
количество – Сколько этого товара было продано в этой сделке.
unit_price – Цена за единицу, используемая для данного товара в данной сделке.
description – Все дополнительные сведения в текстовом формате.
offer_id – Идентификатор предложения, инициировавшего эту сделку. Примечание: Первое предложение инициирует сделку, поэтому этот идентификатор мы будем хранить здесь.
ts – Метка времени, когда произошла эта сделка.

Что вы думаете?
Мы только что рассмотрели модель данных для облегчения онлайн-торговли криптовалютами, акциями и другими производными финансовыми инструментами. Это всего лишь голые кости модели; есть куча других деталей, которые мы могли бы добавить. Я думаю о документах, связанных с трейдерами, и о способе хранения платежной информации. Что бы вы добавили? Или, может быть, удалить? Пожалуйста, расскажите нам в комментариях.











